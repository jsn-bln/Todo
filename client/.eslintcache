[{"C:\\Users\\Jayson Balano\\Documents\\React\\todo_with_user\\main_app\\src\\index.js":"1","C:\\Users\\Jayson Balano\\Documents\\React\\todo_with_user\\main_app\\src\\Login\\login.js":"2","C:\\Users\\Jayson Balano\\Documents\\React\\todo_with_user\\main_app\\src\\Register\\register.js":"3","C:\\Users\\Jayson Balano\\Documents\\React\\todo_with_user\\main_app\\src\\Homepage\\homepage.js":"4","C:\\Users\\Jayson Balano\\Documents\\React\\todo_with_user\\main_app\\src\\Userpage\\userpage.js":"5","C:\\Users\\Jayson Balano\\Documents\\React\\todo_with_user\\main_app\\src\\context\\userContext.js":"6","C:\\Users\\Jayson Balano\\Documents\\React\\todo_with_user\\main_app\\src\\Nav\\nav.js":"7","C:\\Users\\Jayson Balano\\Documents\\React\\todo_with_user\\main_app\\src\\App.js":"8","C:\\Users\\Jayson Balano\\Documents\\React\\todo_with_user\\main_app\\src\\todos\\todo.js":"9"},{"size":150,"mtime":1611283671735,"results":"10","hashOfConfig":"11"},{"size":2724,"mtime":1611559258003,"results":"12","hashOfConfig":"11"},{"size":2469,"mtime":1611559627100,"results":"13","hashOfConfig":"11"},{"size":3259,"mtime":1611554447040,"results":"14","hashOfConfig":"11"},{"size":136,"mtime":1610431828352,"results":"15","hashOfConfig":"11"},{"size":77,"mtime":1611021743153,"results":"16","hashOfConfig":"11"},{"size":2085,"mtime":1611553365994,"results":"17","hashOfConfig":"11"},{"size":1657,"mtime":1611552717670,"results":"18","hashOfConfig":"11"},{"size":4724,"mtime":1611476569475,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"klidi5",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"C:\\Users\\Jayson Balano\\Documents\\React\\todo_with_user\\main_app\\src\\index.js",[],["41","42"],"C:\\Users\\Jayson Balano\\Documents\\React\\todo_with_user\\main_app\\src\\Login\\login.js",[],"C:\\Users\\Jayson Balano\\Documents\\React\\todo_with_user\\main_app\\src\\Register\\register.js",["43","44"],"C:\\Users\\Jayson Balano\\Documents\\React\\todo_with_user\\main_app\\src\\Homepage\\homepage.js",[],"C:\\Users\\Jayson Balano\\Documents\\React\\todo_with_user\\main_app\\src\\Userpage\\userpage.js",[],["45","46"],"C:\\Users\\Jayson Balano\\Documents\\React\\todo_with_user\\main_app\\src\\context\\userContext.js",[],"C:\\Users\\Jayson Balano\\Documents\\React\\todo_with_user\\main_app\\src\\Nav\\nav.js",[],"C:\\Users\\Jayson Balano\\Documents\\React\\todo_with_user\\main_app\\src\\App.js",[],"C:\\Users\\Jayson Balano\\Documents\\React\\todo_with_user\\main_app\\src\\todos\\todo.js",["47","48"],"import {useState, useContext} from 'react'\r\nimport {IconButton,TextField,Button,ButtonGroup, Typography, Checkbox ,Dialog,DialogTitle,DialogActions, DialogContent} from '@material-ui/core'\r\nimport './todo.css'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport axios from 'axios'\r\nimport UserData from '../context/userContext'\r\n\r\n\r\nconst Todo = (props) => {\r\n    const [checked, setChecked] = useState(props.isDone)\r\n    const {userData, setUserData} = useContext(UserData)\r\n    const [todo, setTodo] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    \r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n\r\n    const handleDelete = () => {\r\n        axios({\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            data: {\r\n                username: props.username,\r\n                id: props.id,\r\n                action: 'removetask'\r\n            },\r\n            url: '/users/task'\r\n        }).then(res => {\r\n            setUserData({\r\n                token: userData.token,\r\n                user: {\r\n                    username: userData.user.username,\r\n                    task: res.data.task\r\n                }\r\n            })\r\n            \r\n        }).catch(err => console.log(err.response.data.message))\r\n    }\r\n\r\n    const handleCheckBox = () => {\r\n        axios({\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            data: {\r\n                id: props.id,\r\n                isDone: !props.isDone,\r\n                action: 'isdone'\r\n            },\r\n            url: '/users/task'\r\n        }).then(res => {\r\n            setUserData({\r\n                token: userData.token,\r\n                user: {\r\n                    username: userData.user.username,\r\n                    task: res.data.task\r\n                }\r\n            })\r\n            console.log(userData)\r\n        }).catch(err => console.log(err.response.data.message))\r\n        \r\n    }\r\n    \r\n    const handleEdit = () => {\r\n        axios({\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            data: {\r\n                id: props.id,\r\n                todo: todo,\r\n                action: 'edittodo'\r\n            },\r\n            url: '/users/task'\r\n        }).then(res => {\r\n            setUserData({\r\n                token: userData.token,\r\n                user: {\r\n                    username: userData.user.username,\r\n                    task: res.data.task\r\n                }\r\n            })\r\n            console.log(userData)\r\n        }).catch(err => console.log(err.response.data.message))\r\n        handleClose()\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n        <ButtonGroup className='btn-group'>\r\n            <Checkbox className='checkbox' icon={<CheckCircleOutlineIcon />} checkedIcon={<CheckCircleIcon />} \r\n                name=\"checked\" checked={props.isDone} onClick={handleCheckBox}/>\r\n            {props.isDone?\r\n                <>\r\n                    <Typography className='todo-text completed'>{props.data}</Typography>\r\n                    <IconButton disabled onClick={handleClickOpen} className='todo-btn'>{<EditIcon/>}</IconButton>\r\n                </>\r\n                :\r\n                <>\r\n                    <Typography className='todo-text'>{props.data}</Typography>\r\n                    <IconButton onClick={handleClickOpen} className='todo-btn'>{<EditIcon/>}</IconButton>\r\n                </>\r\n            }\r\n            <IconButton onClick={handleDelete} className='todo-btn'>{<DeleteIcon/>}</IconButton>\r\n        </ButtonGroup>\r\n\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Edit</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            id=\"name\"\r\n            label=\"Enter task\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={e => setTodo(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleEdit} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default Todo\r\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":5,"column":47,"nodeType":"55","messageId":"56","endLine":5,"endColumn":58},{"ruleId":"53","severity":1,"message":"57","line":5,"column":72,"nodeType":"55","messageId":"56","endLine":5,"endColumn":76},{"ruleId":"49","replacedBy":"58"},{"ruleId":"51","replacedBy":"59"},{"ruleId":"53","severity":1,"message":"60","line":13,"column":12,"nodeType":"55","messageId":"56","endLine":13,"endColumn":19},{"ruleId":"53","severity":1,"message":"61","line":13,"column":21,"nodeType":"55","messageId":"56","endLine":13,"endColumn":31},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'CardActions' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.",["62"],["63"],"'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]